<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        LfJ506ZSOmHtP//Z
</value>
  </data>
</root>